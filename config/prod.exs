import Config

# Note we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the `mix assets.deploy` task,
# which you should run after static files are built and
# before starting your production server.
config :vault_lite, VaultLiteWeb.Endpoint,
  cache_static_manifest: "priv/static/cache_manifest.json",
  # Force HTTPS in production
  force_ssl: [rewrite_on: [:x_forwarded_proto]],
  # Security headers
  secure_cookie_flag: true,
  # Enable comprehensive security headers
  check_origin: [
    "https://yourdomain.com",
    "https://api.yourdomain.com"
  ]

# Configures Swoosh API Client
config :swoosh, api_client: Swoosh.ApiClient.Finch, finch_name: VaultLite.Finch

# Disable Swoosh Local Memory Storage
config :swoosh, local: false

# Enhanced logging for production
config :logger,
  level: :info,
  format: "$time $metadata[$level] $message\n",
  metadata: [:request_id, :user_id, :action, :secret_key]

# SSL/TLS Configuration - will be configured in runtime.exs with environment variables
# This ensures secure key handling

# Enhanced logging for production
config :logger,
  level: :info,
  format: "$time $metadata[$level] $message\n",
  metadata: [:request_id, :user_id, :action, :secret_key]

# Security-focused configuration
config :vault_lite, :security,
  # Rate limiting configuration
  rate_limiting: [
    enabled: true,
    # Enhanced rate limits for production
    api_requests_per_minute: 60,
    login_attempts_per_minute: 5,
    registration_attempts_per_minute: 3,
    # IP-based blocking after repeated violations
    block_threshold: 10,
    block_duration_minutes: 60
  ],
  # Security headers configuration
  security_headers: [
    enabled: true,
    # Content Security Policy
    csp:
      "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'",
    # Additional security headers
    # 1 year
    hsts_max_age: 31_536_000,
    x_frame_options: "DENY",
    x_content_type_options: "nosniff",
    x_xss_protection: "1; mode=block",
    referrer_policy: "strict-origin-when-cross-origin"
  ],
  # Input sanitization configuration
  input_sanitization: [
    enabled: true,
    # 1MB
    max_secret_size: 1_048_576,
    # 10KB
    max_metadata_size: 10_240,
    allowed_metadata_keys: ["description", "environment", "created_by", "updated_by", "tags"],
    # Prevent dangerous patterns in secret keys
    forbidden_key_patterns: [
      # Path traversal
      ~r/\.\./,
      # HTML/SQL injection characters
      ~r/[<>\"'&]/,
      # Null bytes
      ~r/\x00/,
      # Control characters
      ~r/[\x01-\x1f\x7f]/
    ]
  ],
  # Audit and monitoring
  monitoring: [
    enabled: true,
    alert_on_failed_logins: 5,
    alert_on_admin_actions: true,
    alert_on_bulk_operations: true,
    retention_days: 365
  ]

# AWS KMS Integration placeholder (for future enhancement)
config :vault_lite, :kms,
  enabled: false,
  # Will be configured via environment variables
  aws_region: {:system, "AWS_REGION"},
  kms_key_id: {:system, "KMS_KEY_ID"}

# External security monitoring integration
config :vault_lite, :external_security,
  # Sentry for error tracking and security monitoring
  sentry: [
    enabled: {:system, "SENTRY_ENABLED", false},
    dsn: {:system, "SENTRY_DSN"},
    environment: "production",
    release: {:system, "APP_VERSION", "1.0.0"}
  ],
  # Additional security tools integration
  security_headers_check: true,
  vulnerability_scanning: true

# Runtime production configuration, including reading
# of environment variables, is done on config/runtime.exs.
